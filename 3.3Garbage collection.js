//可达性（Reachability）
// JavaScript 中主要的内存管理概念是 可达性。
//
// 简而言之，“可达”值是那些以某种方式可访问或可用的值。它们一定是存储在内存中的。
//
// 这里列出固有的可达值的基本集合，这些值明显不能被释放。
//
// 比方说：
//
// 当前函数的局部变量和参数。
// 嵌套调用时，当前调用链上所有函数的变量与参数。
// 全局变量。
// （还有一些内部的）
// 这些值被称作 根（roots）。
//
// 如果一个值可以通过引用或引用链从根访问任何其他值，则认为该值是可达的。
//
// 比方说，如果全局变量中有一个对象，并且该对象有一个属性引用了另一个对象，则该对象被认为是可达的。而且它引用的内容也是可达的。下面是详细的例子。
//
// 在 JavaScript 引擎中有一个被称作 垃圾回收器 的东西在后台执行。它监控着所有对象的状态，并删除掉那些已经不可达的。